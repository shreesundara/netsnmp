 #include <net-snmp/net-snmp-config.h>
 #include <net-snmp/net-snmp-features.h>
 #include <net-snmp/net-snmp-includes.h>
 #include <net-snmp/agent/net-snmp-agent-includes.h>
 #include <net-snmp/agent/mib_modules.h>
 #include "vswitch-idl.h"
 #include "ovsdb-idl.h"

 #include "@@SUBSTITUTE_TABLE_NAME@@.h"
 #include "@@SUBSTITUTE_TABLE_NAME@@_interface.h"
 #include "@@SUBSTITUTE_TABLE_NAME@@_ovsdb_get.h"

 const oid @@SUBSTITUTE_TABLE_NAME@@_oid[] = { @@SUBSTITUTE_TABLE_NAME_UPPER@@_OID };
 const int @@SUBSTITUTE_TABLE_NAME@@_oid_size = OID_LENGTH(@@SUBSTITUTE_TABLE_NAME@@_oid);
 @@SUBSTITUTE_TABLE_NAME@@_registration @@SUBSTITUTE_TABLE_NAME@@_user_context;
 void initialize_table_@@SUBSTITUTE_TABLE_NAME@@(void);
 void shutdown_table_@@SUBSTITUTE_TABLE_NAME@@(void);

 void init_@@SUBSTITUTE_TABLE_NAME@@(void) {
     DEBUGMSGTL(("verbose:@@SUBSTITUTE_TABLE_NAME@@:init_@@SUBSTITUTE_TABLE_NAME@@", "called\n"));
     @@SUBSTITUTE_TABLE_NAME@@_registration * user_context;
     u_long flags;
     user_context = netsnmp_create_data_list("@@SUBSTITUTE_TABLE_NAME@@",NULL,NULL);
     flags = 0;
     _@@SUBSTITUTE_TABLE_NAME@@_initialize_interface(user_context,flags);
     @@SUBSTITUTE_TABLE_NAME@@_ovsdb_idl_init(idl);
 }

 void shutdown_@@SUBSTITUTE_TABLE_NAME@@(void) {
     _@@SUBSTITUTE_TABLE_NAME@@_shutdown_interface(&@@SUBSTITUTE_TABLE_NAME@@_user_context);
 }

 int @@SUBSTITUTE_TABLE_NAME@@_rowreq_ctx_init(@@SUBSTITUTE_TABLE_NAME@@_rowreq_ctx *rowreq_ctx, void *user_init_ctx) {
     DEBUGMSGTL(("verbose:@@SUBSTITUTE_TABLE_NAME@@:@@SUBSTITUTE_TABLE_NAME@@_rowreq_ctx_init","called\n"));
     netsnmp_assert(NULL != rowreq_ctx);
     return MFD_SUCCESS;
 }

 void @@SUBSTITUTE_TABLE_NAME@@_rowreq_ctx_cleanup(@@SUBSTITUTE_TABLE_NAME@@_rowreq_ctx *rowreq_ctx) {
     DEBUGMSGTL(("verbose:@@SUBSTITUTE_TABLE_NAME@@:@@SUBSTITUTE_TABLE_NAME@@_rowreq_ctx_cleanup","called\n"));
     netsnmp_assert(NULL != rowreq_ctx);
 }

 int @@SUBSTITUTE_TABLE_NAME@@_pre_request(@@SUBSTITUTE_TABLE_NAME@@_registration *user_context) {
     DEBUGMSGTL(("verbose:@@SUBSTITUTE_TABLE_NAME@@:@@SUBSTITUTE_TABLE_NAME@@_pre_request","called\n"));
     return MFD_SUCCESS;
 }

 int @@SUBSTITUTE_TABLE_NAME@@_post_request(@@SUBSTITUTE_TABLE_NAME@@_registration *user_context, int rc) {
     DEBUGMSGTL(("verbose:@@SUBSTITUTE_TABLE_NAME@@:@@SUBSTITUTE_TABLE_NAME@@_post_request","called\n"));
     return MFD_SUCCESS;
 }